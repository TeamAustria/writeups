diff --git a/q3asm/q3asm.c b/q3asm/q3asm.c
index 00982df..e263504 100644
--- a/q3asm/q3asm.c
+++ b/q3asm/q3asm.c
@@ -919,6 +919,66 @@ ASM(RET)
     return 0;
 }
 
+ASM(ENTER)
+{
+    int v;
+    if (!strncmp(token, "ENTER", 5))
+    {
+        STAT("ENTER");
+        Parse();
+        v = ParseExpression();
+        EmitByte(&segment[CODESEG], OP_ENTER);
+        EmitInt(&segment[CODESEG], v);
+        instructionCount++;
+        return 1;
+    }
+    return 0;
+}
+
+ASM(LEAVE)
+{
+    int v;
+    if (!strncmp(token, "LEAVE", 5))
+    {
+        STAT("LEAVE");
+        Parse();
+        v = ParseExpression();
+        EmitByte(&segment[CODESEG], OP_LEAVE);
+        EmitInt(&segment[CODESEG], v);
+        instructionCount++;
+        return 1;
+    }
+    return 0;
+}
+
+ASM(LOCAL)
+{
+    int v;
+    if (!strncmp(token, "LOCAL", 5))
+    {
+        STAT("LOCAL");
+        Parse();
+        v = ParseExpression();
+        EmitByte(&segment[CODESEG], OP_LOCAL);
+        EmitInt(&segment[CODESEG], v);
+        instructionCount++;
+        return 1;
+    }
+    return 0;
+}
+
+ASM(PUSH)
+{
+    if (!strncmp(token, "push", 4))
+    {
+        STAT("PUSH");
+        EmitByte(&segment[CODESEG], OP_PUSH);
+        instructionCount++;
+        return 1;
+    }
+    return 0;
+}
+
 // pop is needed to discard the return value of
 // a function
 ASM(POP)
@@ -1363,6 +1423,10 @@ Empirical frequency statistics from FI 2001.01.23:
     ASM(LABEL)
     ASM(ADDRF)
     ASM(CALL)
+    ASM(ENTER)
+    ASM(LEAVE)
+    ASM(LOCAL)
+    ASM(PUSH)
     ASM(POP)
     ASM(RET)
     ASM(ALIGN)
